<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SgAAAABJRU5ErkJggg==
</value>
  </data>
</root>